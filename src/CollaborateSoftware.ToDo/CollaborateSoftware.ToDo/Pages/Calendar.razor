@page "/calendar"

<AuthorizeView>
    <Authorized>
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="#">Home</a></li>
                <li class="breadcrumb-item active" aria-current="page">Calendar</li>
            </ol>
        </nav>

        <div class="border border-dark bg-light p-2 mb-5 d-flex">

            <div class="form-group d-flex p-2">
                <label for="from-date">From: </label>
                <input id="from-date" class="form-control" type="date" @bind-value="FromDate" />
            </div>

            <div class="form-group d-flex p-2">
                <label for="to-date">To: </label>
                <input id="to-date" class="form-control" type="date" @bind-value="ToDate" />
            </div>

            <button type="button" class="btn btn-primary" title="Show tasks due do today" @onclick="eventArgs => { CreateCalendar(); }">
                <span class="material-icons">
                    calendar_today
                </span>
                <span>Create</span>
            </button>

        </div>

        @if (CalendarData == null)
        {
            <p><em>Enter a valid from and to date and click on Create to generate your calendar ...</em></p>
        }
        else
        {
            <div class="d-flex flex-wrap" style="max-width: 180rem">
                @foreach (var day in CalendarData)
                {
                    <div class="pointer @day.CssClass" style="width: 18rem;" @onclick="eventArgs => { SelectCurrentDate(day.Date); }">
                        <div class="card-body">
                            <h5 class="card-title">@day.Date.ToShortDateString()</h5>

                            @if (day.Date == CurrentDate)
                            {
                                <h6 class="card-subtitle mb-2 text-muted fw-bold">@day.Date.DayOfWeek</h6>
                            }
                            else
                            {
                                <h6 class="card-subtitle mb-2 text-muted">@day.Date.DayOfWeek</h6>
                            }

                            @if (day.HolidayName != null)
                            {
                                <p class="card-text">@day.HolidayName</p>
                            }
                        </div>
                    </div>
                }
            </div>

            <div class="mt-3">
                @if (Tasks == null || Tasks.Count() == 0)
                {
                    <div><em>No to dos for @CurrentDate.ToShortDateString() ...</em></div>
                }
                else
                {
                    <h3>To Do's  for  @CurrentDate.ToShortDateString()</h3>
                    <table class="table">
                        <thead>
                            <tr>
                                <th>
                                    <span>Category</span>
                                </th>
                                <th>
                                    <span>Date</span>
                                </th>
                                <th>
                                    <span>Priority</span>
                                </th>
                                <th>
                                    <span>Title</span>
                                </th>
                                <th>
                                    <span>Done</span>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var task in Tasks)
                            {
                                <tr>
                                    <td>
                                        <div class="d-flex" style="background-color: @task.Category?.Color; height: 35px; width: 35px; border: 1px solid black; text-align: center; vertical-align: middle;">
                                            <span class="material-icons">
                                                @task.Category?.Icon
                                            </span>
                                            <span class="ml-5">
                                                @task.Category?.Name
                                            </span>
                                        </div>
                                    </td>
                                    <td>@task.Date.ToShortDateString()</td>
                                    <td>
                                        @switch (task.Priority)
                                        {
                                            case Backend.Data.Priority.Low:
                                                <span class="material-icons">
                                                    low_priority
                                                </span>
                                                break;
                                            case Backend.Data.Priority.Middle:
                                                <span class="material-icons">
                                                    list
                                                </span>
                                                break;
                                            case Backend.Data.Priority.High:
                                                <span class="material-icons">
                                                    priority_high
                                                </span>
                                                break;
                                        }

                                    </td>
                                    <td>@task.Title</td>
                                    <td>
                                        <div class="form-check form-switch">
                                            @if (task.Done)
                                            {
                                                <input class="form-check-input" type="checkbox" id="doneCheckChecked" checked readonly>
                                            }
                                            else
                                            {
                                                <input class="form-check-input" type="checkbox" id="doneCheckChecked" readonly>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
            </div>

            <div class="mt-3">
                @if (AppointmentList == null || AppointmentList.Count() == 0)
                {
                    <div><em>No appointments for @CurrentDate.ToShortDateString() ...</em></div>
                }
                else
                {
                    <h3>Appointments for  @CurrentDate.ToShortDateString()</h3>
                    <table class="table">
                        <thead>
                            <tr>
                                <th>
                                    <span>Category</span>
                                </th>
                                <th>
                                    <span>Date</span>
                                </th>
                                <th>
                                    <span>Priority</span>
                                </th>
                                <th>
                                    <span>Title</span>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var task in AppointmentList)
                            {
                                <tr>
                                    <td>
                                        <div class="d-flex" style="background-color: @task.Category?.Color; height: 35px; width: 35px; border: 1px solid black; text-align: center; vertical-align: middle;">
                                            <span class="material-icons">
                                                @task.Category?.Icon
                                            </span>
                                            <span class="ml-5">
                                                @task.Category?.Name
                                            </span>
                                        </div>
                                    </td>
                                    <td>@task.Date</td>
                                    <td>
                                        @switch (task.Priority)
                                        {
                                            case Backend.Data.Priority.Low:
                                                <span class="material-icons">
                                                    low_priority
                                                </span>
                                                break;
                                            case Backend.Data.Priority.Middle:
                                                <span class="material-icons">
                                                    list
                                                </span>
                                                break;
                                            case Backend.Data.Priority.High:
                                                <span class="material-icons">
                                                    priority_high
                                                </span>
                                                break;
                                        }

                                    </td>
                                    <td>@task.Title</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
            </div>
        }
    </Authorized>
    <NotAuthorized>
        <p role="status">Register or Log In to use the application.</p>
    </NotAuthorized>
</AuthorizeView>